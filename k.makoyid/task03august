import numpy as np

class NormalizeArray:
    def __init__(self, a, sigma):
        self.a = a
        self.sigma = sigma

    def forward(self, input_array):
        input_array = np.array(input_array)

        input_mean = np.mean(input_array)
        input_std = np.std(input_array)

        normalized = (input_array - input_mean) / input_std

        output = normalized * self.sigma + self.a
        
        return output

a = 5
sigma = 2
normalizer = NormalizeArray(a, sigma)

test_arrays = [
    np.random.rand(10),  # 1D array
    np.random.rand(3, 3),  # 2D array
    np.random.rand(2, 2, 2),  # 3D array
    np.random.rand(2, 2, 2, 2)  # 4D array
]

for i, arr in enumerate(test_arrays):
    print(f"\nТестування {i+1}D масиву:")
    print(f"Вхідний масив:\n{arr}")
    print(f"Середнє вхідного масиву: {np.mean(arr):.4f}")
    print(f"Дисперсія вхідного масиву: {np.var(arr):.4f}")
    
    output = normalizer.forward(arr)
    
    print(f"\nВихідний масив:\n{output}")
    print(f"Середнє вихідного масиву: {np.mean(output):.4f}")
    print(f"Дисперсія вихідного масиву: {np.var(output):.4f}")
------------------------------------------------------------------------------------------------------------
result:

Тестування 1D масиву:
Вхідний масив:
[0.20533838 0.08737348 0.97517393 0.19763887 0.29970447 0.69142709
 0.06057739 0.28336939 0.74984699 0.39847766]
Середнє вхідного масиву: 0.3949
Дисперсія вхідного масиву: 0.0853

Вихідний масив:
[3.70221283 2.89456427 8.97290428 3.64949803 4.34829183 7.03022702
 2.71110446 4.23645346 7.4301998  5.02454402]
Середнє вихідного масиву: 5.0000
Дисперсія вихідного масиву: 4.0000

Тестування 2D масиву:
Вхідний масив:
[[0.21862935 0.96930258 0.42816009]
 [0.38023291 0.94959273 0.01533319]
 [0.25555428 0.54245289 0.38926015]]
Середнє вхідного масиву: 0.4609
Дисперсія вхідного масиву: 0.0907

Вихідний масив:
[[3.39054971 8.37645941 4.7822356 ]
 [4.46390723 8.24554822 2.04027336]
 [3.63580203 5.541359   4.52386544]]
Середнє вихідного масиву: 5.0000
Дисперсія вихідного масиву: 4.0000

Тестування 3D масиву:
Вхідний масив:
[[[0.37600428 0.4912872 ]
  [0.73886133 0.3202642 ]]

 [[0.42598824 0.27855662]
  [0.5206047  0.09925444]]]
Середнє вхідного масиву: 0.4064
Дисперсія вхідного масиву: 0.0313

Вихідний масив:
[[[4.65677695 5.96056322]
  [8.76049011 4.02638732]]

 [[5.22206798 3.55469767]
  [6.29212792 1.52688884]]]
Середнє вихідного масиву: 5.0000
Дисперсія вихідного масиву: 4.0000

Тестування 4D масиву:
Вхідний масив:
[[[[0.59566331 0.7765806 ]
   [0.91692714 0.59490904]]

  [[0.73309177 0.20227529]
   [0.78219422 0.97159127]]]


 [[[0.05216782 0.52863365]
   [0.23753302 0.95369602]]

  [[0.04646123 0.94393445]
   [0.91559199 0.42257252]]]]
Середнє вхідного масиву: 0.6046
Дисперсія вхідного масиву: 0.0997

Вихідний масив:
[[[[4.94331973 6.08898414]
   [6.97773294 4.93854332]]

  [[5.81358973 2.45217783]
   [6.12453253 7.32389528]]]


 [[[1.50161763 4.51885232]
   [2.67544849 7.21057304]]

  [[1.46548046 7.14875758]
   [6.96927806 3.84721692]]]]
Середнє вихідного масиву: 5.0000
Дисперсія вихідного масиву: 4.0000
-----------------------------------------------------------------------------------------------------------
def test_normalize_array():
    a = 5
    sigma = 2
    normalizer = NormalizeArray(a, sigma)
    
    test_arrays = [
        np.random.rand(10),  # 1D array
        np.random.rand(3, 3),  # 2D array
        np.random.rand(2, 2, 2),  # 3D array
        np.random.rand(2, 2, 2, 2)  # 4D array
    ]
    
    for i, arr in enumerate(test_arrays):
        print(f"\nТестування {i+1}D масиву:")
        print(f"Вхідний масив:\n{arr}")
        print(f"Середнє вхідного масиву: {np.mean(arr):.4f}")
        print(f"Дисперсія вхідного масиву: {np.var(arr):.4f}")
        
        output = normalizer.forward(arr)
        
        print(f"\nВихідний масив:\n{output}")
        print(f"Середнє вихідного масиву: {np.mean(output):.4f}")
        print(f"Дисперсія вихідного масиву: {np.var(output):.4f}")

        mean_close = np.isclose(np.mean(output), a, atol=1e-6)
        var_close = np.isclose(np.var(output), sigma**2, atol=1e-6)
        
        print(f"\nПеревірка середнього (має бути близько до {a}): {'Пройдено' if mean_close else 'Не пройдено'}")
        print(f"Перевірка дисперсії (має бути близько до {sigma**2}): {'Пройдено' if var_close else 'Не пройдено'}")

        input_mean = np.mean(arr)
        input_var = np.var(arr)
        alternative = (arr - input_mean) / np.sqrt(input_var)
        alternative = alternative * sigma + a
        
        methods_equal = np.allclose(output, alternative)
        print(f"\nПеревірка рівності двох методів: {'Пройдено' if methods_equal else 'Не пройдено'}")
        
        if not (mean_close and var_close and methods_equal):
            print("ПОМИЛКА: Тест не пройдено")
            return
        
        print("Тест пройдено успішно!")
    
    print("\nВсі тести пройдено успішно!")

test_normalize_array()
------------------------------------------------------------------------------------------------------------
result: Тестування 1D масиву:
Вхідний масив:
[0.8599765  0.91327932 0.72395389 0.46967163 0.86276463 0.43447003
 0.46203312 0.21399258 0.17530858 0.63895952]
Середнє вхідного масиву: 0.5754
Дисперсія вхідного масиву: 0.0638

Вихідний масив:
[7.252245   7.67416431 6.17555608 4.16278119 7.27431449 3.88414238
 4.10231846 2.13895    1.83274618 5.5027819 ]
Середнє вихідного масиву: 5.0000
Дисперсія вихідного масиву: 4.0000

Перевірка середнього (має бути близько до 5): Пройдено
Перевірка дисперсії (має бути близько до 4): Пройдено

Перевірка рівності двох методів: Пройдено
Тест пройдено успішно!

Тестування 2D масиву:
Вхідний масив:
[[0.25956228 0.02388784 0.78885099]
 [0.31064056 0.91738007 0.05727293]
 [0.69724921 0.42523733 0.574012  ]]
Середнє вхідного масиву: 0.4505
Дисперсія вхідного масиву: 0.0891

Вихідний масив:
[[3.72095627 2.14185871 7.26736765]
 [4.06319784 8.12855541 2.36554998]
 [6.65360508 4.83103453 5.82787454]]
Середнє вихідного масиву: 5.0000
Дисперсія вихідного масиву: 4.0000

Перевірка середнього (має бути близько до 5): Пройдено
Перевірка дисперсії (має бути близько до 4): Пройдено

Перевірка рівності двох методів: Пройдено
Тест пройдено успішно!

Тестування 3D масиву:
Вхідний масив:
[[[0.99539378 0.29907849]
  [0.17331726 0.68229918]]

 [[0.56377711 0.97392244]
  [0.48852784 0.47786844]]]
Середнє вхідного масиву: 0.5818
Дисперсія вхідного масиву: 0.0752

Вихідний масив:
[[[8.01680009 2.93812789]
  [2.02087087 5.73320115]]

 [[4.86874398 7.86019588]
  [4.31990297 4.24215719]]]
Середнє вихідного масиву: 5.0000
Дисперсія вихідного масиву: 4.0000

Перевірка середнього (має бути близько до 5): Пройдено
Перевірка дисперсії (має бути близько до 4): Пройдено

Перевірка рівності двох методів: Пройдено
Тест пройдено успішно!

Тестування 4D масиву:
Вхідний масив:
[[[[0.83354645 0.16745557]
   [0.01997976 0.14761916]]

  [[0.27159307 0.39245643]
   [0.32828445 0.26340218]]]


 [[[0.91355493 0.23467276]
   [0.70197552 0.00844975]]

  [[0.4750955  0.5913086 ]
   [0.05754097 0.25800537]]]]
Середнє вхідного масиву: 0.3541
Дисперсія вхідного масиву: 0.0732

Вихідний масив:
[[[[8.54329478 3.62104863]
   [2.53123903 3.47446247]]

  [[4.39059893 5.28374913]
   [4.8095341  4.33007022]]]


 [[[9.13453753 4.11776699]
   [7.5710183  2.44603514]]

  [[5.89443132 6.75321723]
   [2.80880705 4.29018915]]]]
Середнє вихідного масиву: 5.0000
Дисперсія вихідного масиву: 4.0000

Перевірка середнього (має бути близько до 5): Пройдено
Перевірка дисперсії (має бути близько до 4): Пройдено

Перевірка рівності двох методів: Пройдено
Тест пройдено успішно!

Всі тести пройдено успішно!

